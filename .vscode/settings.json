{
  "workbench.iconTheme": "material-icon-theme",
  // eslint
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "vue"
  ],
  // bracket pair colorizer
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  // editor
  "editor.codeActionsOnSave": [
    "source.fixAll.eslint",
    "source.organizeImports",
  ],
  // format when
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  // whitespace show
  "editor.renderWhitespace": "trailing",
  // large file
  "editor.largeFileOptimizations": true,
  // language server settings
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // path-intellisense
  "path-intellisense.autoTriggerNextSuggestion": true,
  "path-intellisense.mappings": {
    "@": "${workspaceRoot}/src"
  },
  // volar
  "volar.autoCompleteRefs": true,
  /* ---------------------------------------------------------- */
  // file header
  "fileheader.customMade": {
    "CopyRight": "Mer Bleue Aviation Limited",
    "FilePath": "Do not edit"
  },
  "fileheader.configObj": {
    "CheckFileChange": false, // 单个文件保存时进行diff检查
    "afterAnnotation": {}, // 头部注释之后插入内容
    // 默认注释  没有匹配到注释符号的时候使用。
    "annotationStr": {
      "end": " */",
      "head": "/*",
      "middle": " * @",
      "use": false
    },
    "atSymbol": [
      "@",
      "@"
    ], // 更改所有文件的自定义注释中的@符号
    "atSymbolObj": {}, //  更改单独语言/文件的@
    "autoAdd": false, // 检测文件没有头部注释，自动添加文件头部注释
    "autoAddLine": 1000, // 文件超过多少行数 不再自动添加头部注释
    "autoAlready": true, // 只添加插件支持的语言以及用户通过`language`选项自定义的注释
    "beforeAnnotation": {}, // 头部注释之前插入内容
    "colon": [
      ": ",
      ": "
    ], // 更改所有文件的注释冒号
    "colonObj": {}, //  更改单独语言/文件的冒号
    "createHeader": true, // 新建文件自动添加头部注释
    // 自定义配置是否在函数内生成注释 不同文件类型和语言类型
    "cursorModeInternalAll": {}, // 默认为false 在函数外生成函数注释
    // 自定义语言注释，自定义取消 head、end 部分
    // 不设置自定义配置language无效 默认都有head、end
    "customHasHeadEnd": {}, // "cancel head and function" | "cancel head" | "cancel function"
    "dateFormat": "YYYY-MM-DD HH:mm:ss",
    "designAddHead": false, // 添加注释图案时添加头部注释
    "filePathColon": "路径分隔符替换", // 默认值： mac: / window是: \
    "folderBlacklist": [
      "node_modules"
    ], // 文件夹或文件名禁止自动添加头部注释
    // "functionParamsShape": "no type" 函数参数不需要类型
    "functionBlankSpaceAll": {}, // 函数注释空格缩进 默认为空对象 默认值为0 不缩进
    "functionParamsShape": [
      "{",
      "}"
    ], // 函数参数外形自定义
    "functionTypeSymbol": "*", // 参数没有类型时的默认值
    "functionWideNum": 0, // 函数注释等宽设置 设为0 即为关闭
    "headDesign": false, // 是否使用图案注释替换头部注释
    "headDesignName": "random", // 图案注释使用哪个图案
    // 头部注释第几行插入
    "headInsertLine": {
      "php": 2 // php文件 插入到第二行
    },
    // 自定义语言注释符号，覆盖插件的注释格式
    "language": {
      // 针对有特殊要求的文件如：test.blade.php
      "blade.php": {
        "end": "-->",
        "head": "<!--",
        "middle": " * @"
      },
      // 一次匹配多种文件后缀文件 不用重复设置
      "h/hpp/cpp": {
        "end": " */",
        "head": "/***", // 统一增加几个*号
        "middle": " * @"
      },
      // js后缀文件
      "js/ts": {
        "end": " */",
        "functionParams": "typescript", // 函数注释使用ts语言的解析逻辑
        // 函数自定义注释符号：如果有此配置 会默认使用
        "functionSymbol": {
          "end": " */",
          "head": "/******* ", // 统一增加几个*号
          "middle": " * @"
        },
        "head": "/*** ", // 统一增加几个*号
        "middle": " * @"
      },
      "vue": {
        "end": "-->",
        "head": "<!--",
        "middle": " * @"
      }
    },
    "moveCursor": true, // 自动移动光标到Description所在行
    "openFunctionParamsCheck": true, // 开启关闭自动提取添加函数参数
    // 自动添加头部注释黑名单
    "prohibitAutoAdd": [
      "json"
    ],
    "prohibitItemAutoAdd": [
      "项目的全称禁止项目自动添加头部注释, 使用快捷键自行添加"
    ],
    "showErrorMessage": true, // 是否显示插件错误通知 用于debugger
    "specialOptions": {}, // 特殊字段自定义
    "supportAutoLanguage": [
      "vue",
      "js",
      "ts"
    ], // 设置之后，在数组内的文件才支持自动添加
    "switch": {
      "newlineAddAnnotation": true // 默认遇到换行符(\r\n \n \r)添加注释符号
    },
    "throttleTime": 1000, // 对同一个文件 需要过1分钟再次修改文件并保存才会更新注释
    "typeParamOrder": "type param", // 参数类型 和 参数的位置自定义
    "useWorker": false, // 是否使用工作区设置
    "wideNum": 15, // 头部注释字段长度 默认为13
    "wideSame": true, // 头部注释等宽设置
    "writeLog": false // 错误日志生成
  },
  // i18n Ally
  "i18n-ally.localesPaths": [
    "src/i18n"
  ],
  // set sourceLanguage to a lang which not in the i18n folder,
  // then we can add translate for all lang that in the i18n folder
  "i18n-ally.sourceLanguage": "en",
  "i18n-ally.displayLanguage": "en-US",
  "i18n-ally.namespace": true,
  // pathMatcher is very important, if using namespace
  "i18n-ally.pathMatcher": "{locale}/{namespaces}.json",
  "i18n-ally.keystyle": "nested",
  "i18n-ally.sortKeys": true,
  "i18n-ally.extract.keygenStyle": "default",
  "i18n-ally.translate.engines": [
    "google-cn"
  ],
  // cspell
  "cSpell.words": [
    "appcache",
    "Axios",
    "Bleue",
    "commitlint",
    "datetime",
    "dedienne",
    "ebus",
    "echarts",
    "fomeawesome",
    "fontawesome",
    "ionicons",
    "jsons",
    "lottieplayer",
    "middlewares",
    "mockjs",
    "myapp",
    "pinia",
    "roboto",
    "swatchbook",
    "themify",
    "txfr",
    "webfont",
    "xmark"
  ]
}